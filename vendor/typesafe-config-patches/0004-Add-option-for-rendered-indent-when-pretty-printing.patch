From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jason Penilla <11360596+jpenilla@users.noreply.github.com>
Date: Thu, 9 Nov 2023 17:00:15 -0700
Subject: [PATCH] Add option for rendered indent when pretty printing


diff --git a/config/src/main/java/com/typesafe/config/ConfigRenderOptions.java b/config/src/main/java/com/typesafe/config/ConfigRenderOptions.java
index 99730789532ac4d06a095d3decd6e05a7ae1b54f..fd3dc97372d0cc14518db111e42394d9a8fe1e76 100644
--- a/config/src/main/java/com/typesafe/config/ConfigRenderOptions.java
+++ b/config/src/main/java/com/typesafe/config/ConfigRenderOptions.java
@@ -22,14 +22,16 @@ public final class ConfigRenderOptions {
     private final boolean formatted;
     private final boolean json;
     private final boolean showEnvVariableValues;
+    private final int indent;
 
     private ConfigRenderOptions(boolean originComments, boolean comments, boolean formatted,
-            boolean json, boolean showEnvVariableValues) {
+            boolean json, boolean showEnvVariableValues, int indent) {
         this.originComments = originComments;
         this.comments = comments;
         this.formatted = formatted;
         this.json = json;
         this.showEnvVariableValues = showEnvVariableValues;
+        this.indent = indent;
     }
 
     /**
@@ -40,7 +42,7 @@ public final class ConfigRenderOptions {
      * @return the default render options
      */
     public static ConfigRenderOptions defaults() {
-        return new ConfigRenderOptions(true, true, true, true, true);
+        return new ConfigRenderOptions(true, true, true, true, true, 4);
     }
 
     /**
@@ -50,7 +52,7 @@ public final class ConfigRenderOptions {
      * @return the concise render options
      */
     public static ConfigRenderOptions concise() {
-        return new ConfigRenderOptions(false, false, false, true, true);
+        return new ConfigRenderOptions(false, false, false, true, true, 4);
     }
 
     /**
@@ -66,7 +68,7 @@ public final class ConfigRenderOptions {
         if (value == comments)
             return this;
         else
-            return new ConfigRenderOptions(originComments, value, formatted, json, showEnvVariableValues);
+            return new ConfigRenderOptions(originComments, value, formatted, json, showEnvVariableValues, indent);
     }
 
     /**
@@ -99,7 +101,7 @@ public final class ConfigRenderOptions {
         if (value == originComments)
             return this;
         else
-            return new ConfigRenderOptions(value, comments, formatted, json, showEnvVariableValues);
+            return new ConfigRenderOptions(value, comments, formatted, json, showEnvVariableValues, indent);
     }
 
     /**
@@ -124,7 +126,14 @@ public final class ConfigRenderOptions {
         if (value == formatted)
             return this;
         else
-            return new ConfigRenderOptions(originComments, comments, value, json, showEnvVariableValues);
+            return new ConfigRenderOptions(originComments, comments, value, json, showEnvVariableValues, indent);
+    }
+
+    public ConfigRenderOptions setIndent(int value) {
+        if (value == indent)
+            return this;
+        else
+            return new ConfigRenderOptions(originComments, comments, formatted, json, showEnvVariableValues, value);
     }
 
     /**
@@ -137,6 +146,10 @@ public final class ConfigRenderOptions {
         return formatted;
     }
 
+    public int getIndent() {
+        return indent;
+    }
+
     /**
      * Returns options with JSON toggled. JSON means that HOCON extensions
      * (omitting commas, quotes for example) won't be used. However, whether to
@@ -152,7 +165,7 @@ public final class ConfigRenderOptions {
         if (value == json)
             return this;
         else
-            return new ConfigRenderOptions(originComments, comments, formatted, value, showEnvVariableValues);
+            return new ConfigRenderOptions(originComments, comments, formatted, value, showEnvVariableValues, indent);
     }
 
     /**
@@ -167,7 +180,7 @@ public final class ConfigRenderOptions {
         if (value == showEnvVariableValues)
             return this;
         else
-            return new ConfigRenderOptions(originComments, comments, formatted, json, value);
+            return new ConfigRenderOptions(originComments, comments, formatted, json, value, indent);
     }
 
     /**
diff --git a/config/src/main/java/com/typesafe/config/impl/AbstractConfigValue.java b/config/src/main/java/com/typesafe/config/impl/AbstractConfigValue.java
index 67728e257cda97f0d3de679210119b930464a101..11122433beb488e4b7a755e45db3924587647417 100644
--- a/config/src/main/java/com/typesafe/config/impl/AbstractConfigValue.java
+++ b/config/src/main/java/com/typesafe/config/impl/AbstractConfigValue.java
@@ -320,10 +320,10 @@ abstract class AbstractConfigValue implements ConfigValue, MergeableValue {
 
     protected static void indent(StringBuilder sb, int indent, ConfigRenderOptions options) {
         if (options.getFormatted()) {
-            int remaining = indent;
-            while (remaining > 0) {
-                sb.append("    ");
-                --remaining;
+            final int j = indent * options.getIndent();
+            sb.ensureCapacity(sb.length() + j);
+            for (int i = 0; i < j; i++) {
+                sb.append(' ');
             }
         }
     }
