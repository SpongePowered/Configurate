From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: zml <zml@stellardrift.ca>
Date: Thu, 12 Aug 2021 20:13:30 -0700
Subject: [PATCH] emitter: Emit block sequence comments before the indicator

This does make comments on a sequence ambiguous with comments on the
first element of the sequence. I don't think there's anything we can
do about that though.... needs more thought i suppose

diff --git a/src/main/java/org/yaml/snakeyaml/emitter/Emitter.java b/src/main/java/org/yaml/snakeyaml/emitter/Emitter.java
index 6842ba3dc1e29603dceebc2deced5fde61e94684..cbb80699d5bfb18a14ded385d9c81228d21a3f2b 100644
--- a/src/main/java/org/yaml/snakeyaml/emitter/Emitter.java
+++ b/src/main/java/org/yaml/snakeyaml/emitter/Emitter.java
@@ -753,6 +753,9 @@ public final class Emitter implements Emitable {
       } else if (event instanceof CommentEvent) {
         blockCommentsCollector.collectEvents(event);
       } else {
+        if (!blockCommentsCollector.isEmpty()) {
+          writeBlockComment();
+        }
         writeIndent();
         if (!indentWithIndicator || this.first) {
           writeWhitespace(indicatorIndent);
@@ -761,17 +764,6 @@ public final class Emitter implements Emitable {
         if (indentWithIndicator && this.first) {
           indent += indicatorIndent;
         }
-        if (!blockCommentsCollector.isEmpty()) {
-          increaseIndent(false, false);
-          writeBlockComment();
-          if (event instanceof ScalarEvent) {
-            analysis = analyzeScalar(((ScalarEvent) event).getValue());
-            if (!analysis.isEmpty()) {
-              writeIndent();
-            }
-          }
-          indent = indents.pop();
-        }
         states.push(new ExpectBlockSequenceItem(false));
         expectNode(false, false, false);
         inlineCommentsCollector.collectEvents();
diff --git a/src/test/java/org/yaml/snakeyaml/comment/EmitterWithCommentEnabledTest.java b/src/test/java/org/yaml/snakeyaml/comment/EmitterWithCommentEnabledTest.java
index 9175f78f379fe36a57db63c5017329496eadcb71..c95528b3800d7730a4d4ec0a714c3827691093c1 100644
--- a/src/test/java/org/yaml/snakeyaml/comment/EmitterWithCommentEnabledTest.java
+++ b/src/test/java/org/yaml/snakeyaml/comment/EmitterWithCommentEnabledTest.java
@@ -160,8 +160,8 @@ public class EmitterWithCommentEnabledTest {
     String data = "" + //
         "# Comment\n" + //
         "list: # InlineComment1\n" + //
-        "  - # Block Comment\n" + //
-        "    item # InlineComment2\n" + //
+        "  # Block Comment\n" + //
+        "  - item # InlineComment2\n" + //
         "# Comment\n";
 
     String result = runEmitterWithCommentsEnabled(data);
@@ -181,8 +181,8 @@ public class EmitterWithCommentEnabledTest {
         "# Block Comment4\n" + //
         "list: # InlineComment3a\n" + //
         "      # InlineComment3b\n" + //
-        "  - # Block Comment5\n" + //
-        "    item1 # InlineComment4\n" + //
+        "  # Block Comment5\n" + //
+        "  - item1 # InlineComment4\n" + //
         "  - item2: [value2a, value2b] # InlineComment5\n" + //
         "  - item3: {key3a: [value3a1, value3a2], key3b: value3b} # InlineComment6\n" + //
         "# Block Comment6\n" + //
@@ -211,12 +211,12 @@ public class EmitterWithCommentEnabledTest {
   @Test
   public void testAllComments2() throws Exception {
     String data = "" + //
-        "key:\n" + "  key:\n" + "    key:\n" + "    - # Block Comment1\n" + "      item1a\n"
-        + "    - # Block Comment2\n" + "    - item1b\n" + "    - # Block Comment3\n"
+        "key:\n" + "  key:\n" + "    key:\n" + "    # Block Comment1\n" + "    - item1a\n"
+        + "    # Block Comment2\n" + "    -\n" + "    - item1b\n" + "    - # Block Comment3\n"
         + "      MapKey_1: MapValue1\n" + "      MapKey_2: MapValue2\n" + "key2:\n"
-        + "- # Block Comment4\n" + //
-        "  # Block Comment5\n" + //
-        "  item1 # Inline Comment1a\n" + //
+        + "# Block Comment4\n" + //
+        "# Block Comment5\n" + //
+        "- item1 # Inline Comment1a\n" + //
         "        # Inline Comment1b\n" + //
         "- # Block Comment6a\n" + //
         "  # Block Comment6b\n" + //
