[versions]
assertj="3.27.3"
autoValue="1.11.0"
checkerQual="3.49.0"
checkstyle="10.21.2"
geantyref = "1.3.16"
errorprone="2.36.0"
indra = "3.1.3"
junit="5.11.4"
ktlint="0.49.1"
ktfmt="0.54"
pmd = "6.55.0"
spotless = "7.0.2"

[libraries]
# Shared
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }
autoValue = { module = "com.google.auto.value:auto-value", version.ref = "autoValue" }
autoValue-annotations = { module = "com.google.auto.value:auto-value-annotations", version.ref = "autoValue" }
errorprone = { module = "com.google.errorprone:error_prone_core", version.ref = "errorprone" }
errorprone-annotations = { module = "com.google.errorprone:error_prone_annotations", version.ref = "errorprone" }
guava = "com.google.guava:guava:33.4.0-jre"
junit-api = { module = "org.junit.jupiter:junit-jupiter-api" }
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine" }
junit-launcher = { module = "org.junit.platform:junit-platform-launcher" }
stylecheck = "ca.stellardrift:stylecheck:0.2.1"

# Kotlin
kotlin-coroutines = "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2"
kotlin-reflect = {module = "org.jetbrains.kotlin:kotlin-reflect"} # version from Kotlin BOM

# Core
checkerQual = { module = "org.checkerframework:checker-qual", version.ref = "checkerQual" }
geantyref = {module = "io.leangen.geantyref:geantyref", version.ref = "geantyref" }

# DFU
dfu-v2 = "com.mojang:datafixerupper:2.0.24"
dfu-v3 = "com.mojang:datafixerupper:3.0.25"
dfu-v4 = "com.mojang:datafixerupper:4.0.26"
math = "org.spongepowered:math:2.0.1"
slf4j = "org.slf4j:slf4j-api:1.8.0-beta4" # Match version used in MC

# Guice
guice-compile = "com.google.inject:guice:4.1.0"
guice-runtime = "com.google.inject:guice:5.0.1"

# Formats
gson = "com.google.code.gson:gson:2.8.0" # Fixed version, to avoid using API not present in older MC
jackson = "com.fasterxml.jackson.core:jackson-core:2.18.2"

# Tool
clikt = "com.github.ajalt:clikt:2.8.0"
jansi = "org.fusesource.jansi:jansi:2.4.1"

# Build
build-codenarc = { module = "org.codenarc:CodeNarc", version = "3.5.0-groovy-4.0" }
build-codenarcGroovy = { module = "org.apache.groovy:groovy-all", version = "4.0.25" }
build-errorprone = "net.ltgt.gradle:gradle-errorprone-plugin:4.1.0"
build-forbiddenApis = "de.thetaphi:forbiddenapis:3.8"
build-goomph = "com.diffplug.gradle:goomph:4.2.0"
build-indra = { module = "net.kyori:indra-common", version.ref = "indra" }
build-indra-crossdoc = { module = "net.kyori:indra-crossdoc", version.ref = "indra" }
build-japicmp-plugin = "me.champeau.gradle:japicmp-gradle-plugin:0.4.6"
build-japicmp = { module = "com.github.siom79.japicmp:japicmp", version.require = "0.23.+" }
build-nullaway = "net.ltgt.gradle:gradle-nullaway-plugin:2.2.0"
build-spotless = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }
build-shadow = { module = "com.gradleup.shadow:shadow-gradle-plugin", version = "8.3.6" }

# For Renovate -- shouldn't need to use these directly
zPmd = { module = "net.sourceforge.pmd:pmd-java", version.ref = "pmd" }
zCheckstyle = { module = "com.puppycrawl.tools:checkstyle", version.ref = "checkstyle" }
zKtfmt = { module = "com.facebook:ktfmt", version.ref = "ktfmt" }

[plugins]
aggregateJavadoc = "io.freefair.aggregate-javadoc-jar:8.12.1"
detekt = "io.gitlab.arturbosch.detekt:1.23.7"
dokka = "org.jetbrains.dokka:1.9.20"
gitPublish = "org.ajoberstar.git-publish:3.0.1"
gitpatcher = { id = "ca.stellardrift.gitpatcher", version = "1.1.0" }
indra-sonatype = { id = "net.kyori.indra.publishing.sonatype", version.ref = "indra" }
indra-git = { id = "net.kyori.indra.git", version.ref = "indra" }
kotlin = "org.jetbrains.kotlin.jvm:1.9.25"
nexusPublish = { id = "io.github.gradle-nexus.publish-plugin", version = "2.0.0" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
